<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sap.cap</groupId>
	<artifactId>v4</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>srv</name>
	
	<properties>
		<m2eclipse.wtp.contextRoot>v4</m2eclipse.wtp.contextRoot>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<spring.framework.boot.version>1.5.14.RELEASE</spring.framework.boot.version>
		<conf.target.directory>${project.build.directory}\classes\conf</conf.target.directory>
	</properties>

	<parent>
		<groupId>com.sap.cloud.servicesdk.prov</groupId>
		<artifactId>projects-parent</artifactId>
		<version>1.29.0</version>
	</parent>
		
	<dependencies>
		<!-- Start of dependency for main application -->
		<!-- APIs for javax.servlet and Java injection -->
		<dependency>
			<groupId>com.sap.mta</groupId>
			<artifactId>mta_archive_builder</artifactId>
			<version>1.1.7</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<!-- Spring Framework and Spring WebMVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<!-- Logging library -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sap.hcp.cf.logging</groupId>
			<artifactId>cf-java-logging-support-logback</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- Actuator for adding management end point -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
			<version>${spring.framework.boot.version}</version>
		</dependency>
		<!-- Bean validation (@NotNull etc.) -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.1.Final</version>
		</dependency>
		<!-- MethodValidationPostProcessor relies on Expression Language -->
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>3.0.1-b04</version>
		</dependency>
		<!-- Spring Cloud Connector -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-spring-service-connector</artifactId>
			<version>2.0.3.RELEASE</version>
		</dependency>
		<!-- EclipseLink as JPA implementation -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
			<version>2.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>2.0.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring.framework.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<version>${spring.framework.boot.version}</version>
		</dependency>
		<!-- SAP Cloud Platform - HANA database service instance -->
		<dependency>
			<groupId>com.sap.hana.cloud</groupId>
			<artifactId>spring-cloud-sap-connector</artifactId>
			<version>1.0.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.sap.hana.cloud</groupId>
			<artifactId>spring-cloud-cloudfoundry-hana-service-connector</artifactId>
			<version>1.0.4.RELEASE</version>
		</dependency>
		<!-- HANA database driver -->
		<dependency>
			<groupId>com.sap.cloud.db.jdbc</groupId>
			<artifactId>ngdbc</artifactId>
			<version>2.3.51</version>
			<scope>runtime</scope>
		</dependency>
		<!-- Apache HTTP Client ( closeable, configurable) -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<!-- Resiliency and asynchronous requests -->
		<dependency>
			<groupId>com.netflix.hystrix</groupId>
			<artifactId>hystrix-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit</artifactId>
			<version>2.0.4.RELEASE</version>
		</dependency>
		<!-- Security -->
		<dependency>
			<groupId>com.sap.xs2.security</groupId>
			<artifactId>java-container-security</artifactId>
		</dependency>
		<!-- Additional dependencies because "mvn install-file" does not install 
			bundled pom.xml from artifacts. see https://issues.apache.org/jira/browse/MINSTALL-110 -->
		<dependency>
			<groupId>com.sap.xs2.security</groupId>
			<artifactId>security-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sap.xs2.security</groupId>
			<artifactId>java-container-security-api</artifactId>
			<version>0.28.6</version>
		</dependency>
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
			<version>1.0.9.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<!-- <version>2.3.2.RELEASE</version> -->
		</dependency>
		<!-- Other related libraries -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>com.unboundid.components</groupId>
			<artifactId>json</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.cloudfoundry.identity</groupId>
			<artifactId>cloudfoundry-identity-client-lib</artifactId>
			<version>4.7.4</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- End of dependency for main application -->
		<!-- Dependency for unit test -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Use MockMvcResultMatchers.jsonPath to assert the JSON body -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.2.0</version>
			<scope>test</scope>
		</dependency>
		<!-- H2 (in-memory) database implementation -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.184</version>
			<scope>test</scope>
		</dependency>
		<!-- Liquibase to managed database schema -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<sourceDirectory>srv/src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>srv/src/main/resources</directory>
			</resource>
		</resources>		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- Prevent unnecessary failing in com.sap.cloud.sdk.service.prov.v4.validator.MavenAgent.doValidation(MavenAgent.java:50) -->
			<!-- so that setup of oData service can be simplified. Refer details in RCService.java-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>validate_project</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>			
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warSourceDirectory>web/webapp</warSourceDirectory>
					<webResources>
						<resource>
							<directory>web/webapp</directory>
						</resource>
					</webResources>
					<webXml>srv/src/main/webapp/WEB-INF/web.xml</webXml>
				</configuration>
			</plugin>			
		</plugins>
	</build>
	<profiles >
		<profile>
			<activation>
				<property>
					<name>devmode</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<webResources combine.children="append">
								<resource>
									<directory>${project.build.sourceDirectory}</directory>
									<targetPath>sources</targetPath>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>